name: Auto-publish
on:
  issues:
    types:
      - labeled
      - unlabeled
  pull_request:
    types:
      - labeled
      - unlabeled
  label:
    types: [created, edited, deleted]

jobs:
  bump-version:
    name: "Bump Version on master"
    if: ${{ github.event.label.name == 'patch' || github.event.label.name == 'minor' }}
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v2"
        with:
          ref: ${{ github.ref }}
      - name: "cat package.json"
        run: cat ./package.json
      - name: "Setup Node.js"
        uses: "actions/setup-node@v1"
        with:
          node-version: 12
      - name: "Automated Version Bump"
        uses: "phips28/gh-action-bump-version@master"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "cat package.json"
        run: cat ./package.json
  # build:
  #   name: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'
  #     - run: npm install
  #     - run: npm build



  # publish:
  #   name: Publish to NPM & GitHub Package Registry
  #   runs-on: ubuntu-latest
  #   # needs: build # We need to wait for the build to be committed before publishing

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Check if version has been updated
  #       id: check
  #       uses: ./.github/actions/version-check
  #       with:
  #         diff-search: true
  #         file-name: package.json
  #         token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Print
  #       run: 'echo "version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

  #     - name: Version update detected
  #       if: steps.check.outputs.changed == 'true'
  #       run: 'echo "Version change found! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

  #     - name: Set up Node.js for NPM
  #       if: steps.check.outputs.changed == 'true'
  #       uses: actions/setup-node@v1
  #       with:
  #         registry-url: "https://registry.npmjs.org"

  #     - name: Install dependencies
  #       if: steps.check.outputs.changed == 'true'
  #       run: npm install --only=prod

  #     - name: Publish package to NPM
  #       if: steps.check.outputs.changed == 'true'
  #       run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Set up Node.js for GPR
      #   if: steps.check.outputs.changed == 'true'
      #   uses: actions/setup-node@v1
      #   with:
      #     registry-url: "https://npm.pkg.github.com/"
      #     scope: "@endbug"

      # - name: Set up package for GPR # You need to make sure you package name has the scope needed for GPR
      #   if: steps.check.outputs.changed == 'true'
      #   run: npm run gpr-setup

      # - name: Publish package to GPR
      #   if: steps.check.outputs.changed == 'true'
      #   run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
